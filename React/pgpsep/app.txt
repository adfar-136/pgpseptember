//themer change worst case
import React, { useState } from 'react'
import Counter from './components/state/Counter'
import When from './components/state/When'

export default function App() {
  const [bgColor,setBgColor]= useState("white")
  const [color,setColor] = useState("black")
  const [text,setText] = useState("Dark")
  function handleTheme(){
    if(bgColor === "white"){
      setBgColor("black");
      setColor("white");
      setText("Light")
    } else {
      setBgColor("white")
      setColor("black")
      setText("Dark")
    }
  }
  return (
    <div style={{backgroundColor:bgColor,color:color,padding:"40px"}}>
      <h1>Hello Students</h1>
      <button onClick={handleTheme}>{text} Mode</button>
      <Counter/>
      <When/>
    </div>
  )
}

import React from 'react'
import { useState } from 'react'

export default function App() {
  const [condition,setCondition] = useState(false)
  function handleClick(){
    setCondition(!condition)
  }
  return (
    <div style={{backgroundColor:condition?"black":"white",color:condition?"white":"black"}}>
      <button onClick={handleClick}>{condition?"Light":"Dark"} Mode</button>
      <h1>This is my react app</h1>
      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias corrupti dolore voluptatibus possimus, maiores, aliquid unde eos nesciunt blanditiis sint enim, est consectetur asperiores ipsum ducimus deserunt. Error dicta voluptas dolorem, libero nostrum laudantium iure officiis eos tempora repellat quisquam dolore. Quo, incidunt reiciendis. Reiciendis ducimus adipisci architecto earum autem praesentium impedit assumenda vero veniam hic odio quam dolor cumque distinctio commodi maiores minus esse repudiandae quisquam saepe reprehenderit, asperiores laboriosam! Impedit possimus laboriosam ea veritatis perferendis qui accusantium iusto unde, quasi sequi suscipit, magnam similique, veniam quidem ducimus praesentium libero eveniet eum pariatur commodi delectus? Cum culpa iste repudiandae ducimus odio id, sequi, labore qui eos expedita molestiae nemo, repellat rerum exercitationem impedit. Atque ullam sed, odit quas consectetur id ipsum necessitatibus quis doloribus itaque illo neque nesciunt. Quos molestias assumenda dicta nisi debitis dolorem dolores soluta recusandae quam in dignissimos cupiditate, nihil deleniti reiciendis suscipit laudantium. Voluptatem, repellat porro. Dicta consequuntur praesentium cumque dolore vitae voluptates explicabo repudiandae, minima maiores voluptatum unde, sit cupiditate quos exercitationem quisquam odit, suscipit asperiores provident cum commodi! Quos expedita ducimus cum, praesentium blanditiis, debitis deleniti architecto laboriosam laborum aliquam totam ipsum sit, distinctio nemo adipisci consequuntur accusantium! Vero repellendus dolores esse? In!</p>
    </div>
  )
}

import React from 'react'
import { useState } from 'react'

export default function App() {
  const [count,setCount] = useState(0)
  function handleIncrement(){
    setCount((prev)=>prev+1)
    setCount((prev)=>prev+2)
    setCount((prev)=>prev+3)
    setCount(count+1)
  }
  return (
    <div>
      <h1>Count : {count}</h1>
      <button onClick={handleIncrement}>Increment ++++</button>
    </div>
  )
}

import React, { useState } from 'react'

export default function ControlledForms() {
    const [name,setName] = useState("")
    const [email,setEmail] = useState("")
    const [password,setPassword] = useState("")
    const [condition,setCondition] =useState(false)
    function handleSubmit(e){
        e.preventDefault()
       setCondition(true)
    }
  return (
    <div>
        <form onSubmit={handleSubmit}>
            <input type="text"  placeholder='ENter Name'
            value={name} onChange={(e)=>setName(e.target.value)}/> <br /><br />
            <input type="email" placeholder='Enter Email'
            value={email} onChange={(e)=>setEmail(e.target.value)}/> <br /><br />
            <input type="password" placeholder='Enter Password'
            value={password} onChange={(e)=>setPassword(e.target.value)}/> <br /><br />
            <input type="submit" value="SUbmit" />
            {condition ? <h1>My Name is {name} and my email is {email} and my password is {password}</h1>:"Please submit the form"}
        </form>
    </div>
  )
}
\



import React from 'react'
import { useEffect } from 'react'
import { useState } from 'react'

export default function App() {
  const [count,setCount] = useState(0)
  const [number,setNumber] = useState(100)
  useEffect(()=>{
    console.log("USeeffect")
  },[count,number])
  return (
    <div>
      <h1>count: {count}</h1>
      <button onClick={()=>setCount(count+2)}>++++++</button>
      <h1>Number: {number}</h1>
      <button onClick={()=>setNumber(number-2)}>++++++</button>
    </div>
  )
}


//useEffect(()=>//logic) =>mounting + updation
//useEffect(()=>//logic,[]) => mounting
//useEffect(()=>//logic,[x,y,z]) = > mounting + updation =>x,y,z


import React from 'react'
import { useEffect } from 'react';
import { useState } from 'react';

export default function App() {
  const [jokee,setJokee] = useState("")
 async function handleJoke(){
    let data  = await fetch("https://official-joke-api.appspot.com/random_joke");
    let joke = await data.json()
    setJokee(joke)
  }
  useEffect(()=>{
    handleJoke()
  },[])
  return (
    <div>
      <h1>{jokee.setup}</h1>
      <h1>{jokee.punchline}</h1>
      <button onClick={handleJoke}>GenerateJoke</button>
    </div>
  )
}


import React from 'react'
import { useEffect } from 'react'
import { useState } from 'react'

export default function App() {
  const [count,setCount] = useState(0)
  useEffect(()=>{
    let fun = ()=>console.log("Adfar")
    document.addEventListener("click",fun)
    return ()=>{
      document.removeEventListener("click",fun)
    }
  })
  return (
    <div>
      <h1>count :{count}</h1>
      <button onClick={()=>setCount(count+1)}>++++</button>
    </div>
  )
}


import React from 'react'
import { useEffect } from 'react'
import { useState } from 'react'

export default function App() {
  const [count,setCount] = useState(0)
  useEffect(()=>{
    let fun = ()=>console.log("Adfar")
   var id =  setInterval(fun,3000);
   return ()=>{
    clearInterval(id)
   }
  })
  return (
    <div>
      <h1>count :{count}</h1>
      <button onClick={()=>setCount(count+1)}>++++</button>
    </div>
  )
}

import React, { useReducer } from 'react'
function reducer(state,action){
  console.log(">>>>",action)
   if(action.type === "increment") return {count:state.count+action.payload};
   else if(action.type === "decrement") return {count:state.count-action.payload};
   if(action.type === "incrementt") return {count:state.count+action.payload};
   else return state
}
export default function App() {
  const [state,dispatch] = useReducer(reducer,{count:0,color:"blue",condition:true})
  return (
    <div>
      <h1>{state.count}</h1>
      <button onClick={()=>dispatch({type:"increment",payload:1})}>+1</button>
      <button onClick={()=>dispatch({type:"decrement",payload:-1})}>-1</button>
      <button onClick={()=>dispatch({type:"incrementt",payload:100})}>+100</button>
      <button>-100</button>
      <button>1000+</button>
      <button>-1000+</button>
      <button>675</button>
    </div>
  )
}


//useReducer = > complex state

//1. UI (view) => actions => dispatch => data(action) => reducer => state=>view=>UI ;

// button => onClick =>dispatch(100)=>reducer=>state=>data=>UI 

import React from 'react'
import { useReducer } from 'react'
function reducer(state,action){
    switch(action.type){
      case "red":
        return {color:action.payload}
      case "blue":
        return {color:action.payload}
      case "green":
        return {color:action.payload}
      case "yellow":
        return {color:action.payload}
      default:
        return state
    }
}
export default function App() {
  const [state,dispatch] = useReducer(reducer,{color:"white"})
  return (
    <div style={{backgroundColor:state.color}}>
      <button onClick={()=>dispatch({type:"red",payload:"red"})}>Red</button>
      <button onClick={()=>dispatch({type:"blue",payload:"blue"})}>Blue</button>
      <button onClick={()=>dispatch({type:"green",payload:"green"})}>Green</button>
      <button onClick={()=>dispatch({type:"yellow",payload:"yellow"})}>Yellow</button>
    </div>
  )
}
